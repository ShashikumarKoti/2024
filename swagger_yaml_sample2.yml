---
openapi: 3.0.1
info:
  title: Employee Management System API
  description: This API exposes endpoints to manage employees.
  contact:
    name: Shashikumar
    email: sk@gmail.com
  version: '1.0'
servers:
- url: http://localhost:8080
  description: Development
- url: http://localhost:9090
  description: Staging
tags:
- name: get
  description: GET methods of Employee APIs
paths:
  "/employee/{empId}":
    put:
      tags:
      - employee-controller
      operationId: updateEmployee
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Employee"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Employee"
        '404':
          description: Employee not found
    delete:
      tags:
      - employee-controller
      operationId: deleteEm
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Employee"
        '400':
          description: Not found
  "/employee":
    post:
      tags:
      - employee-controller
      summary: Update an employee
      description: Update an existing employee. The response is updated Employee object
        with id, first name, and last name.
      operationId: saveEmployee
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Employee"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Employee"
  "/employees":
    get:
      tags:
      - get
      operationId: findAllEmployees
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Employee"
  "/employees/{empID}":
    get:
      tags:
      - get
      operationId: findEmployeeByID
      parameters:
      - name: empID
        in: path
        description: ID of employee to be retrieved
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Employee"
components:
  schemas:
    Employee:
      required:
      - firstName
      - id
      - lastName
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstName:
          maxLength: 20
          minLength: 1
          type: string
        lastName:
          maxLength: 20
          minLength: 1
          type: string
